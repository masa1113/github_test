name: EC2 auto deploy

on:
  pull_request:
    branches: [ main ]
    types: [closed]

  push:
    branches: [main]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      # IP取得ライブラリをインストール
      - name: Public IP Install
        id: ip
        uses: haythem/public-ip@v1.3

      # BranchをCheckout
      - name: Checkout
        uses: actions/checkout@v2

      # AWS CLIをインストールする
      - name: AWS CLI install
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
          aws --version

      # AWS CLIにキーを設定する
      - name: AWS set Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      # Gitの認証情報を設定する
      - name: Set up Git credentials
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global credential.helper store
          echo "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com" > ~/.git-credentials

      # デプロイする
      - name: Deploy
        run: |
          echo "User: ${{ secrets.USER_NAME }}"
          echo "Host: ${{ secrets.HOST_NAME }}"
          echo "Private Key: ${{ secrets.PRIVATE_KEY }}"

          # SSHのセキュリティグループを開放する
          # セキュリティグループルールを追加する前に、既存のルールを確認
          aws ec2 describe-security-groups --group-ids ${{ secrets.EC2_SECURITY_GROUP_ID }} --query "SecurityGroups[0].IpPermissions[?FromPort==\`22\` && ToPort==\`22\` && IpProtocol=='tcp' && IpRanges[0].CidrIp=='${{ steps.ip.outputs.ipv4 }}/32']" --output text
          if [ -z "$existing_rule" ]; then
            aws ec2 authorize-security-group-ingress --group-id ${{ secrets.EC2_SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
          else
            echo "Security group rule already exists"
          fi

          # SSH接続して、git pullする
          echo "${{ secrets.PRIVATE_KEY }}" > private_key
          chmod 600 private_key

          ssh -oStrictHostKeyChecking=no ${{ secrets.USER_NAME }}@${{ secrets.HOST_NAME }} -i private_key "
            cd /var/www/html/プロジェクトディレクトリ &&
            git remote remove origin &&
            git remote add origin https://github.com/your-username/your-repository.git &&
            git fetch --prune &&
            git checkout main &&
            git pull origin main
          "

          # SSHのセキュリティグループを閉じる
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.EC2_SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
